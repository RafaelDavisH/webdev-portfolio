{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/item-tags.tsx","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@jlengstorf/get-share-image/index.js","webpack:///./src/components/post.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx"],"names":["MDXRenderer","require","module","ItemTags","tags","useSiteMetadata","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn","cleanText","text","encodeURIComponent","replace","exports","__esModule","_a","title","tagline","cloudName","imagePublicID","_b","cloudinaryUrlBase","_c","titleFont","_d","titleExtraConfig","_e","taglineExtraConfig","_f","taglineFont","_g","imageWidth","_h","imageHeight","_j","textAreaWidth","_k","textLeftOffset","_l","titleGravity","_m","taglineGravity","_o","titleLeftOffset","_p","taglineLeftOffset","_q","titleBottomOffset","_r","taglineTopOffset","_s","textColor","titleColor","taglineColor","_t","titleFontSize","_u","taglineFontSize","_v","version","join","undefined","filter","Boolean","shadow","v","Post","post","data","socialImage","getShareImage","split","titlefont","Helmet","description","content","excerpt","property","variant","sx","color","mt","fontSize","date","timeToRead","my","boxShadow","body","PostComponent","query"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-5deec60200bbf2ac21e3.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nexports.__esModule = true;\n/**\n * Encodes characters for Cloudinary URL\n * Encodes some not allowed in Cloudinary parameter values twice:\n *   hash, comma, slash, question mark, backslash\n *   https://support.cloudinary.com/hc/en-us/articles/202521512-How-to-add-a-slash-character-or-any-other-special-characters-in-text-overlays-\n */\n\nfunction cleanText(text) {\n  return encodeURIComponent(text).replace(/%(23|2C|2F|3F|5C)/g, '%25$1');\n}\n/**\n * Generates a social sharing image with custom text using Cloudinary’s APIs.\n *\n * @see https://cloudinary.com/documentation/image_transformations#adding_text_captions\n */\n\n\nfunction generateSocialImage(_a) {\n  var title = _a.title,\n      tagline = _a.tagline,\n      cloudName = _a.cloudName,\n      imagePublicID = _a.imagePublicID,\n      _b = _a.cloudinaryUrlBase,\n      cloudinaryUrlBase = _b === void 0 ? 'https://res.cloudinary.com' : _b,\n      _c = _a.titleFont,\n      titleFont = _c === void 0 ? 'arial' : _c,\n      _d = _a.titleExtraConfig,\n      titleExtraConfig = _d === void 0 ? '' : _d,\n      _e = _a.taglineExtraConfig,\n      taglineExtraConfig = _e === void 0 ? '' : _e,\n      _f = _a.taglineFont,\n      taglineFont = _f === void 0 ? 'arial' : _f,\n      _g = _a.imageWidth,\n      imageWidth = _g === void 0 ? 1280 : _g,\n      _h = _a.imageHeight,\n      imageHeight = _h === void 0 ? 669 : _h,\n      _j = _a.textAreaWidth,\n      textAreaWidth = _j === void 0 ? 760 : _j,\n      _k = _a.textLeftOffset,\n      textLeftOffset = _k === void 0 ? 480 : _k,\n      _l = _a.titleGravity,\n      titleGravity = _l === void 0 ? 'south_west' : _l,\n      _m = _a.taglineGravity,\n      taglineGravity = _m === void 0 ? 'north_west' : _m,\n      _o = _a.titleLeftOffset,\n      titleLeftOffset = _o === void 0 ? null : _o,\n      _p = _a.taglineLeftOffset,\n      taglineLeftOffset = _p === void 0 ? null : _p,\n      _q = _a.titleBottomOffset,\n      titleBottomOffset = _q === void 0 ? 254 : _q,\n      _r = _a.taglineTopOffset,\n      taglineTopOffset = _r === void 0 ? 445 : _r,\n      _s = _a.textColor,\n      textColor = _s === void 0 ? '000000' : _s,\n      titleColor = _a.titleColor,\n      taglineColor = _a.taglineColor,\n      _t = _a.titleFontSize,\n      titleFontSize = _t === void 0 ? 64 : _t,\n      _u = _a.taglineFontSize,\n      taglineFontSize = _u === void 0 ? 48 : _u,\n      _v = _a.version,\n      version = _v === void 0 ? null : _v; // configure social media image dimensions, quality, and format\n\n  var imageConfig = [\"w_\" + imageWidth, \"h_\" + imageHeight, 'c_fill', 'q_auto', 'f_auto'].join(','); // configure the title text\n\n  var titleConfig = [\"w_\" + textAreaWidth, 'c_fit', \"co_rgb:\" + (titleColor || textColor), \"g_\" + titleGravity, \"x_\" + (titleLeftOffset || textLeftOffset), \"y_\" + titleBottomOffset, \"l_text:\" + titleFont + \"_\" + titleFontSize + titleExtraConfig + \":\" + cleanText(title)].join(','); // configure the tagline text\n\n  var taglineConfig = tagline ? [\"w_\" + textAreaWidth, 'c_fit', \"co_rgb:\" + (taglineColor || textColor), \"g_\" + taglineGravity, \"x_\" + (taglineLeftOffset || textLeftOffset), \"y_\" + taglineTopOffset, \"l_text:\" + taglineFont + \"_\" + taglineFontSize + taglineExtraConfig + \":\" + cleanText(tagline)].join(',') : undefined; // combine all the pieces required to generate a Cloudinary URL\n\n  var urlParts = [cloudinaryUrlBase, cloudName, 'image', 'upload', imageConfig, titleConfig, taglineConfig, version, imagePublicID]; // remove any falsy sections of the URL (e.g. an undefined version)\n\n  var validParts = urlParts.filter(Boolean); // join all the parts into a valid URL to the generated image\n\n  return validParts.join('/');\n}\n\nexports[\"default\"] = generateSocialImage;","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\";\r\nimport { Heading } from \"@theme-ui/components\";\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Layout from \"./layout\";\r\nimport ItemTags from \"./item-tags\";\r\nimport SEO from \"./seo\";\r\nimport { format } from \"date-fns\";\r\nimport getShareImage from \"@jlengstorf/get-share-image\";\r\n\r\ntype PostProps = {\r\n  data: {\r\n    post: {\r\n      slug: string;\r\n      title: string;\r\n      date: string;\r\n      tags?: {\r\n        name: string;\r\n        slug: string;\r\n      }[];\r\n      description?: string;\r\n      body: string;\r\n      excerpt: string;\r\n      timeToRead: number;\r\n      banner?: {\r\n        childImageSharp: {\r\n          resize: {\r\n            src: string;\r\n          };\r\n        };\r\n      };\r\n    };\r\n  };\r\n};\r\n\r\nconst px = [`32px`, `16px`, `8px`, `4px`];\r\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`);\r\n\r\nconst Post = ({ data: { post } }: PostProps) => {\r\n  const socialImage = getShareImage({\r\n    title: post.title,\r\n    tagline: post.tags\r\n      .map((tag) => `#${tag.name.split(\" \").join(\"\")}`)\r\n      .join(\" \"),\r\n    cloudName: \"rafaeldavish\",\r\n    imagePublicID: \"Frame_4_3x_kutirc.png\",\r\n    titlefont: \"futura\",\r\n    titleExtraConfig: \"_bold\",\r\n    textColor: \"232129\",\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      {/* <SEO\r\n        title={post.title}\r\n        description={post.description ? post.description : post.excerpt}\r\n        image={socialImage}\r\n      /> */}\r\n      <Helmet>\r\n        <title>{post.title}</title>\r\n        <meta name={post.description} content={post.excerpt} />\r\n        <meta name=\"image\" content={socialImage} />\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta\r\n          property=\"og:url\"\r\n          content={`https://rafaeldavis.dev${post.slug}`}\r\n        />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content={post.title} />\r\n        <meta property=\"og:description\" content={post.excerpt} />\r\n        <meta property=\"og:image\" content={socialImage} />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta property=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta property=\"twitter:url\" content=\"https://rafaeldavis.dev\" />\r\n        <meta property=\"twitter:creator\" content=\"@rafaeldavish\" />\r\n      </Helmet>\r\n      <Heading variant=\"h2\" as=\"h2\">\r\n        {post.title}\r\n      </Heading>\r\n      <p\r\n        sx={{\r\n          color: `secondary`,\r\n          mt: 3,\r\n          a: { color: `secondary` },\r\n          fontSize: [1, 1, 2],\r\n        }}\r\n      >\r\n        <time>{post.date}</time>\r\n        {post.tags && (\r\n          <React.Fragment>\r\n            {` — `}\r\n            <ItemTags tags={post.tags} />\r\n          </React.Fragment>\r\n        )}\r\n        {` — `}\r\n        <span>{post.timeToRead} min read</span>\r\n      </p>\r\n      <section\r\n        sx={{\r\n          my: 5,\r\n          \".gatsby-resp-image-wrapper\": {\r\n            my: [4, 4, 5],\r\n            boxShadow: shadow.join(`, `),\r\n          },\r\n        }}\r\n      >\r\n        <MDXRenderer>{post.body}</MDXRenderer>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { graphql } from \"gatsby\"\r\nimport PostComponent from \"../components/post\"\r\n\r\nexport default PostComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    post(slug: { eq: $slug }) {\r\n      slug\r\n      title\r\n      date(formatString: \"MMMM DD,YYYY\")\r\n      tags {\r\n        name\r\n        slug\r\n      }\r\n      description\r\n      body\r\n      excerpt\r\n      timeToRead\r\n      banner {\r\n        childImageSharp {\r\n          resize(width: 1200, quality: 90) {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Post from \"../../../components/post\"\r\n\r\ntype Props = {\r\n  data: {\r\n    post: any\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { post } = data\r\n\r\n  return <Post data={{ ...data, post }} />\r\n}\r\n"],"sourceRoot":""}