{"version":3,"sources":["webpack:///./src/components/item-tags.tsx","webpack:///./src/texts/hero.mdx","webpack:///./src/texts/bottom.mdx","webpack:///./src/components/list.tsx","webpack:///./src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/components/blog-list-item.tsx","webpack:///./src/components/listing.tsx"],"names":["ItemTags","tags","useSiteMetadata","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","sx","fontSize","fontWeight","color","textAlign","parentName","className","isMDXComponent","Title","makeShortcode","id","text","List","children","mb","ul","margin","padding","li","listStyle","variant","Homepage","posts","blogPath","p","mt","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","title","date","Listing"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-b9279c4ceb5382917348.js","sourcesContent":["import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`,\n      textAlign: `center`\n    }} mdxType=\"Text\">\n  Hi 👋 there!\n    </Text>\n    <p>{`I'm a web developer passionate about all things JavaScript and ☕ coffee enthusiast based out\nof the City of Angeles. A career changer, who is always seeking to grow as an individual and a professional.\nSelf-driven, problem-solver, and very interested to experiment with new programming technologies.\nMost importantly, I am a family man 👨‍👩‍👧‍👦, friend 🧔🏽, drummer 🥁, artist 🎨, adventurer ⛺, and a\ntechnology aficionado 🛸.`}</p>\n    <br />\n    <p>{`Check out my current `}<a parentName=\"p\" {...{\n        \"href\": \"#projects\"\n      }}>{`projects`}</a>{` and latest `}<a parentName=\"p\" {...{\n        \"href\": \"/blog\"\n      }}>{`blog posts`}</a>{` to catch up on\nwhere I'm at in my developer journey. `}<p className=\"underline text-center\"><a parentName=\"p\" {...{\n          \"href\": \"#contact\"\n        }}>{`Perhaps, you want to chat about working on your site 📧`}</a></p></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section id=\"projects\"></section>\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <h5>{`NPM NBA 2020 Playoff Library`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`September 20, 2020`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/RafaelDavisH/playoff-2020\"\n        }}>{`GitHub`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/package/playoffs-2020\"\n        }}>{`npm`}</a></li>\n      <li parentName=\"ul\">{`After learning with Kent C. Dodds on 'How to Write an Open Source JavaScript Library', I worked on a package called 'Lakers 2020 roster'. Then after, I decided to work on a more elaborated package and potentially useful library. I simply implemented a library to run a random function and JSON structuring helped me accomplished this.`}</li>\n    </ul>\n    <h5>{`Job Wishlist App`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`July 05, 2020`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/RafaelDavisH/job-wishlist-app\"\n        }}>{`GitHub`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://47cnq.csb.app/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Built a React application with dummy data initially to test and style cards. Implemented useState hook to set the initial state with an empty array. Used localStorage and useEffect to keep localStorage updated.`}</li>\n    </ul>\n    <h5>{`Color Palette Generator`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`June 14, 2020`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/react-color-pallet-generator-f39od\"\n        }}>{`CodeSandbox`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://csb-f39od.netlify.app/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Built Color Palette Generator using with React and State Hook. I learned to trigger \"copy to clipboard\" when an individual\ncolor card gets clicked. Similar to Color Flipper app, this app also randomly generates an hex color by iterate through an array\nwith numbers and letters (0-9, A-F), but setting in state an array of five hex colors. I added some hover animations with Tailwind CSS.\nI was not able to add two more features which are: When pressing \"C\" all five hex colors would by copied to the clipboard, and pressing\nthe Tab bar it would generate new random colors.`}</li>\n    </ul>\n    <h5>{`Color Flipper`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`June 12, 2020`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/react-color-flipper-w3e15\"\n        }}>{`CodeSandbox`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://csb-w3e15.netlify.app/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Built a Color Flipper App using with React and State Hook. I learned how to dynamically generate hex colors by randomly iterate through\nan array with numbers and letters (0-9, A-F). I used Helmet and useState to change the color for the body background and span element\ntext color. I'm continuing to experiment with Tailwind CSS to add style.`}</li>\n    </ul>\n    <h5>{`Tic Tac Toe`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`June 10, 2020`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/react-tic-tac-toe-scrimbaremix-v5jzy\"\n        }}>{`CodeSandbox`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://csb-v5jzy.netlify.app/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Built a Tic Tac Toe game using modern React and React Hooks. I learned how to destructure props, create states, and to\nimplement Time Travel functionalities by using each move's unique ID to jump to previous moves. I used Tailwind CSS for the majority of styling.`}</li>\n    </ul>\n    <h5>{`MoTo`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Dec 15, 2019`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/chingu-voyages/v13-toucans-team-03\"\n        }}>{`github`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://moto-toucans03.netlify.com/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`I was fortunate to collaborate with a remote team called Toucans03 in the Chingu Voyage program. Moto has a Pomodoro timer, MIT (most important task) checklist, TODO, inspirational quotes, and a work-in-progress weather forecast.\nI was responsible for the Pomodoro Timer, dynamic backgrounds, MoTo's logo, GitHub workflow for pull requests and merges, two blog posts,\nwhich are part of a series ofr voyage logs.`}</li>\n    </ul>\n    <h5>{`Pomodoro`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`Dec 15, 2019`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/pomodoro-modal-1vqz0?fontsize=14&hidenavigation=1&theme=dark\"\n        }}>{`codeSandbox`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://1vqz0.csb.app/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Built a Pomodoro Timer as part of the features for MoTo, a Momentum clone app. The Pomodoro contains basic play, stop, and reset functionalities.\nIt has a short break of five minutes, a longer break of fifteen minutes, and a twenty-five minutes time block for work. The play button has a fill animation\nthat progresses as time comes to completion.`}</li>\n    </ul>\n    <h5>{`Basic CSS Web Design Blog`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`July 08, 2019`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/freeCodeCamp/CurriculumExpansion/tree/master/learn-CSS-by-Building-a-blog\"\n        }}>{`github`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://learn-css-by-building-a-blog--rafaeldavish.repl.co/\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Collaborating with freeCodeCamp to build version 7.0 of their curriculum. Build a final version of a blog implementing basic CSS web design concepts. Currently working backwards\nto break down the final version into small steps.`}</li>\n    </ul>\n    <h5>{`Responsive Piano`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`May 21, 2019`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/freeCodeCamp/CurriculumExpansion/tree/master/responsive-web-design-piano\"\n        }}>{`github`}</a>{` - 🚀 `}<a parentName=\"li\" {...{\n          \"href\": \"https://codepen.io/RafaelDavisH/project/editor/DyanzQ\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Collaborating with freeCodeCamp to build version 7.0 of their curriculum. Build a final version of the Piano\nimplementing all the responsive web design concepts. Worked backwards to break down the final version into small steps.`}</li>\n    </ul>\n    <h5>{`Favorite Food and Dessert Spots`}</h5>\n    <ul>\n      <li parentName=\"ul\"><em parentName=\"li\">{`June 2018`}</em>{` | 👨‍💻 `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/RafaelDavisH/LATastyBites.com\"\n        }}>{`github`}</a>{` - 🚀`}<a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`site`}</a></li>\n      <li parentName=\"ul\">{`Single-page application that uses Bootstrap, CSS Grid, Knockoutjs, Google Maps and Foursquare API to display food spots around LA. The markers display information\nabout each spot using Google's Info Windows and saved images.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx } from \"theme-ui\"\r\n\r\ntype ListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst List = ({ children }: ListProps) => (\r\n  <section\r\n    sx={{\r\n      mb: [5, 5, 6],\r\n      ul: { margin: 0, padding: 0 },\r\n      li: { listStyle: `none`, mb: 3 },\r\n      a: { variant: `links.listItem` },\r\n    }}\r\n  >\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default List\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\";\r\nimport { Link } from \"gatsby\";\r\nimport Layout from \"./layout\";\r\nimport Hero from \"../texts/hero\";\r\nimport Bottom from \"../texts/bottom\";\r\nimport Title from \"./title\";\r\nimport Listing from \"./listing\";\r\nimport List from \"./list\";\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\";\r\nimport replaceSlashes from \"../utils/replaceSlashes\";\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string;\r\n    title: string;\r\n    date: string;\r\n    tags?: {\r\n      name: string;\r\n      slug: string;\r\n    }[];\r\n  }[];\r\n};\r\n\r\nconst Homepage = ({ posts }: PostsProps) => {\r\n  const { basePath, blogPath } = useSiteMetadata();\r\n\r\n  return (\r\n    <Layout>\r\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\r\n        <Hero />\r\n      </section>\r\n      <List>\r\n        <Bottom />\r\n      </List>\r\n      <Title text=\"Latest Posts\">\r\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\r\n          Read all posts\r\n        </Link>\r\n      </Title>\r\n      <Listing posts={posts} showTags={false} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { graphql } from \"gatsby\"\r\nimport HomepageComponent from \"../components/homepage\"\r\n\r\nexport default HomepageComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Homepage from \"../../../components/homepage\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Homepage posts={allPost.nodes} />\r\n}\r\n","/** @jsx jsx */\r\nimport React from \"react\";\r\nimport { jsx, Styled } from \"theme-ui\";\r\nimport { Box } from \"@theme-ui/components\";\r\nimport { Link } from \"gatsby\";\r\nimport ItemTags from \"./item-tags\";\r\nimport { format } from \"date-fns\";\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string;\r\n    title: string;\r\n    date: string;\r\n    tags?: {\r\n      name: string;\r\n      slug: string;\r\n    }[];\r\n  };\r\n  showTags?: boolean;\r\n};\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a\r\n      as={Link}\r\n      to={post.slug}\r\n      sx={{ fontSize: [1, 2, 3], color: `text` }}\r\n    >\r\n      {post.title}\r\n    </Styled.a>\r\n    <p\r\n      sx={{\r\n        color: `secondary`,\r\n        mt: 1,\r\n        a: { color: `secondary` },\r\n        fontSize: [1, 1, 2]\r\n      }}\r\n    >\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` — `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n);\r\n\r\nexport default BlogListItem;\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}